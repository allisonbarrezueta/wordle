{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from 'react';\nimport { MAX_WORD_LENGTH } from '../utils';\nconst useGuess = () => {\n  _s();\n  const [guess, setGuess] = useState('');\n  const previousKey = useRef('');\n  const isValidKey = key => {\n    if (key === 'Backspace' || key === 'Enter') {\n      return true;\n    }\n    if (key.includes('Key')) {\n      if (previousKey.current.includes('Key') || previousKey.current === '' || previousKey.current === 'Backspace' || previousKey.current === 'Enter') {\n        return true;\n      }\n    }\n    return false;\n  };\n  const addGuessLetter = letter => {\n    setGuess(prevGuess => {\n      const newGuess = (letter.length === 1 && prevGuess.length !== MAX_WORD_LENGTH ? prevGuess + letter : prevGuess).toUpperCase();\n      if (letter === 'Backspace') {\n        return prevGuess.slice(0, -1);\n      }\n      if (letter === 'Enter' && prevGuess.length === MAX_WORD_LENGTH) {\n        return '';\n      }\n      if (newGuess.length === MAX_WORD_LENGTH) {\n        return newGuess;\n      }\n      return newGuess;\n    });\n  };\n  const onKeyDown = event => {\n    if (isValidKey(event.code)) {\n      addGuessLetter(event.key);\n    }\n    previousKey.current = event.code;\n  };\n  useEffect(() => {\n    window.addEventListener('keydown', onKeyDown);\n    return () => {\n      window.removeEventListener('keydown', onKeyDown);\n    };\n  }, []);\n  return [guess, setGuess, addGuessLetter];\n};\n_s(useGuess, \"3nj6y9rx6M/T6sceRmiOv/REK4g=\");\nexport default useGuess;","map":{"version":3,"names":["useEffect","useRef","useState","MAX_WORD_LENGTH","useGuess","_s","guess","setGuess","previousKey","isValidKey","key","includes","current","addGuessLetter","letter","prevGuess","newGuess","length","toUpperCase","slice","onKeyDown","event","code","window","addEventListener","removeEventListener"],"sources":["/Users/jelou/wordle/src/hooks/useGuess.tsx"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\n\nimport { MAX_WORD_LENGTH } from '../utils';\n\nconst useGuess = (): [\n\tstring,\n\tReact.Dispatch<React.SetStateAction<string>>,\n\t(letter: string) => void\n] => {\n\tconst [guess, setGuess] = useState<string>('');\n\tconst previousKey = useRef<string>('');\n\n\tconst isValidKey = (key: string): boolean => {\n\t\tif (key === 'Backspace' || key === 'Enter') {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (key.includes('Key')) {\n\t\t\tif (\n\t\t\t\tpreviousKey.current.includes('Key') ||\n\t\t\t\tpreviousKey.current === '' ||\n\t\t\t\tpreviousKey.current === 'Backspace' ||\n\t\t\t\tpreviousKey.current === 'Enter'\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t};\n\n\tconst addGuessLetter = (letter: string): void => {\n\t\tsetGuess((prevGuess) => {\n\t\t\tconst newGuess = (\n\t\t\t\tletter.length === 1 && prevGuess.length !== MAX_WORD_LENGTH\n\t\t\t\t\t? prevGuess + letter\n\t\t\t\t\t: prevGuess\n\t\t\t).toUpperCase();\n\n\t\t\tif (letter === 'Backspace') {\n\t\t\t\treturn prevGuess.slice(0, -1);\n\t\t\t}\n\t\t\tif (letter === 'Enter' && prevGuess.length === MAX_WORD_LENGTH) {\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\tif (newGuess.length === MAX_WORD_LENGTH) {\n\t\t\t\treturn newGuess;\n\t\t\t}\n\t\t\treturn newGuess;\n\t\t});\n\t};\n\n\tconst onKeyDown = (event: KeyboardEvent) => {\n\t\tif (isValidKey(event.code)) {\n\t\t\taddGuessLetter(event.key);\n\t\t}\n\t\tpreviousKey.current = event.code;\n\t};\n\n\tuseEffect(() => {\n\t\twindow.addEventListener('keydown', onKeyDown);\n\t\treturn () => {\n\t\t\twindow.removeEventListener('keydown', onKeyDown);\n\t\t};\n\t}, []);\n\n\treturn [guess, setGuess, addGuessLetter];\n};\n\nexport default useGuess;\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAEnD,SAASC,eAAe,QAAQ,UAAU;AAE1C,MAAMC,QAAQ,GAAGA,CAAA,KAIZ;EAAAC,EAAA;EACJ,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAMM,WAAW,GAAGP,MAAM,CAAS,EAAE,CAAC;EAEtC,MAAMQ,UAAU,GAAIC,GAAW,IAAc;IAC5C,IAAIA,GAAG,KAAK,WAAW,IAAIA,GAAG,KAAK,OAAO,EAAE;MAC3C,OAAO,IAAI;IACZ;IAEA,IAAIA,GAAG,CAACC,QAAQ,CAAC,KAAK,CAAC,EAAE;MACxB,IACCH,WAAW,CAACI,OAAO,CAACD,QAAQ,CAAC,KAAK,CAAC,IACnCH,WAAW,CAACI,OAAO,KAAK,EAAE,IAC1BJ,WAAW,CAACI,OAAO,KAAK,WAAW,IACnCJ,WAAW,CAACI,OAAO,KAAK,OAAO,EAC9B;QACD,OAAO,IAAI;MACZ;IACD;IAEA,OAAO,KAAK;EACb,CAAC;EAED,MAAMC,cAAc,GAAIC,MAAc,IAAW;IAChDP,QAAQ,CAAEQ,SAAS,IAAK;MACvB,MAAMC,QAAQ,GAAG,CAChBF,MAAM,CAACG,MAAM,KAAK,CAAC,IAAIF,SAAS,CAACE,MAAM,KAAKd,eAAe,GACxDY,SAAS,GAAGD,MAAM,GAClBC,SAAS,EACXG,WAAW,CAAC,CAAC;MAEf,IAAIJ,MAAM,KAAK,WAAW,EAAE;QAC3B,OAAOC,SAAS,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MAC9B;MACA,IAAIL,MAAM,KAAK,OAAO,IAAIC,SAAS,CAACE,MAAM,KAAKd,eAAe,EAAE;QAC/D,OAAO,EAAE;MACV;MAEA,IAAIa,QAAQ,CAACC,MAAM,KAAKd,eAAe,EAAE;QACxC,OAAOa,QAAQ;MAChB;MACA,OAAOA,QAAQ;IAChB,CAAC,CAAC;EACH,CAAC;EAED,MAAMI,SAAS,GAAIC,KAAoB,IAAK;IAC3C,IAAIZ,UAAU,CAACY,KAAK,CAACC,IAAI,CAAC,EAAE;MAC3BT,cAAc,CAACQ,KAAK,CAACX,GAAG,CAAC;IAC1B;IACAF,WAAW,CAACI,OAAO,GAAGS,KAAK,CAACC,IAAI;EACjC,CAAC;EAEDtB,SAAS,CAAC,MAAM;IACfuB,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEJ,SAAS,CAAC;IAC7C,OAAO,MAAM;MACZG,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEL,SAAS,CAAC;IACjD,CAAC;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO,CAACd,KAAK,EAAEC,QAAQ,EAAEM,cAAc,CAAC;AACzC,CAAC;AAACR,EAAA,CAhEID,QAAQ;AAkEd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}