{"ast":null,"code":"var _jsxFileName = \"/Users/jelou/wordle/src/components/letter/index.tsx\",\n  _s = $RefreshSig$();\nimport { mappings } from '../../constants';\nimport useStore from '../../store';\nimport { LetterState } from '../../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Letter = _ref => {\n  _s();\n  let {\n    letter,\n    state\n  } = _ref;\n  const {\n    keysPressed\n  } = useStore();\n  const getWrapperStyle = () => {\n    const styles = [];\n    if (state) {\n      styles.push(mappings.StateToColor[state]);\n    } else if (keysPressed[letter] === LetterState.MISS) {\n      styles.push('bg-gray-100 border-gray-100');\n    }\n    return styles.join(' ');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `border rounded-md flex items-center justify-center ${getWrapperStyle()}`,\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: `font-semibold text-xl md:text-2xl lg:text-3xl ${state || keysPressed[letter] === LetterState.MISS ? 'text-white' : ''}`,\n      children: letter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 3\n  }, this);\n};\n_s(Letter, \"1POnCAlETez/JGnNdjzbdK41yX8=\", false, function () {\n  return [useStore];\n});\n_c = Letter;\nLetter.defaultProps = {\n  state: undefined\n};\nexport default Letter;\nvar _c;\n$RefreshReg$(_c, \"Letter\");","map":{"version":3,"names":["mappings","useStore","LetterState","jsxDEV","_jsxDEV","Letter","_ref","_s","letter","state","keysPressed","getWrapperStyle","styles","push","StateToColor","MISS","join","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","defaultProps","undefined","$RefreshReg$"],"sources":["/Users/jelou/wordle/src/components/letter/index.tsx"],"sourcesContent":["import { mappings } from '../../constants';\nimport useStore from '../../store';\nimport { LetterState } from '../../utils';\n\ntype IProps = {\n\tletter: string;\n\tstate?: LetterState;\n};\n\nconst Letter = ({ letter, state }: IProps) => {\n\tconst { keysPressed } = useStore();\n\n\tconst getWrapperStyle = () => {\n\t\tconst styles: string[] = [];\n\t\tif (state) {\n\t\t\tstyles.push(mappings.StateToColor[state]);\n\t\t} else if (keysPressed[letter] === LetterState.MISS) {\n\t\t\tstyles.push('bg-gray-100 border-gray-100');\n\t\t}\n\t\treturn styles.join(' ');\n\t};\n\n\treturn (\n\t\t<div\n\t\t\tclassName={`border rounded-md flex items-center justify-center ${getWrapperStyle()}`}\n\t\t>\n\t\t\t<h2\n\t\t\t\tclassName={`font-semibold text-xl md:text-2xl lg:text-3xl ${\n\t\t\t\t\tstate || keysPressed[letter] === LetterState.MISS ? 'text-white' : ''\n\t\t\t\t}`}\n\t\t\t>\n\t\t\t\t{letter}\n\t\t\t</h2>\n\t\t</div>\n\t);\n};\n\nLetter.defaultProps = {\n\tstate: undefined\n};\n\nexport default Letter;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,iBAAiB;AAC1C,OAAOC,QAAQ,MAAM,aAAa;AAClC,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO1C,MAAMC,MAAM,GAAGC,IAAA,IAA+B;EAAAC,EAAA;EAAA,IAA9B;IAAEC,MAAM;IAAEC;EAAc,CAAC,GAAAH,IAAA;EACxC,MAAM;IAAEI;EAAY,CAAC,GAAGT,QAAQ,CAAC,CAAC;EAElC,MAAMU,eAAe,GAAGA,CAAA,KAAM;IAC7B,MAAMC,MAAgB,GAAG,EAAE;IAC3B,IAAIH,KAAK,EAAE;MACVG,MAAM,CAACC,IAAI,CAACb,QAAQ,CAACc,YAAY,CAACL,KAAK,CAAC,CAAC;IAC1C,CAAC,MAAM,IAAIC,WAAW,CAACF,MAAM,CAAC,KAAKN,WAAW,CAACa,IAAI,EAAE;MACpDH,MAAM,CAACC,IAAI,CAAC,6BAA6B,CAAC;IAC3C;IACA,OAAOD,MAAM,CAACI,IAAI,CAAC,GAAG,CAAC;EACxB,CAAC;EAED,oBACCZ,OAAA;IACCa,SAAS,EAAG,sDAAqDN,eAAe,CAAC,CAAE,EAAE;IAAAO,QAAA,eAErFd,OAAA;MACCa,SAAS,EAAG,iDACXR,KAAK,IAAIC,WAAW,CAACF,MAAM,CAAC,KAAKN,WAAW,CAACa,IAAI,GAAG,YAAY,GAAG,EACnE,EAAE;MAAAG,QAAA,EAEFV;IAAM;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAER,CAAC;AAACf,EAAA,CA1BIF,MAAM;EAAA,QACaJ,QAAQ;AAAA;AAAAsB,EAAA,GAD3BlB,MAAM;AA4BZA,MAAM,CAACmB,YAAY,GAAG;EACrBf,KAAK,EAAEgB;AACR,CAAC;AAED,eAAepB,MAAM;AAAC,IAAAkB,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}