{"ast":null,"code":"var _jsxFileName = \"/Users/jelou/wordle/src/modals/HelpModal.tsx\";\nimport React from \"react\";\nimport { Dialog } from \"@headlessui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HelpModal = _ref => {\n  let {\n    isOpen,\n    onClose\n  } = _ref;\n  if (!isOpen) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: isOpen,\n    onClose: onClose,\n    children: /*#__PURE__*/_jsxDEV(Dialog.Panel, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Modal Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This is the content of the modal.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = HelpModal;\nexport default HelpModal;\nvar _c;\n$RefreshReg$(_c, \"HelpModal\");","map":{"version":3,"names":["React","Dialog","jsxDEV","_jsxDEV","HelpModal","_ref","isOpen","onClose","open","children","Panel","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/jelou/wordle/src/modals/HelpModal.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Dialog } from \"@headlessui/react\";\n\ntype ModalProps = {\n  isOpen: boolean;\n  onClose: () => void;\n};\n\nconst HelpModal: React.FC<ModalProps> = ({ isOpen, onClose }) => {\n  if (!isOpen) {\n    return null;\n  }\n\n  return (\n    <Dialog open={isOpen} onClose={onClose}>\n      <Dialog.Panel>\n        <div className=\"modal-content\">\n          <h2>Modal Content</h2>\n          <p>This is the content of the modal.</p>\n          <button onClick={onClose}>Close</button>\n        </div>\n      </Dialog.Panel>\n    </Dialog>\n  );\n};\nexport default HelpModal;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAoB,OAAO;AACvC,SAASC,MAAM,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO3C,MAAMC,SAA+B,GAAGC,IAAA,IAAyB;EAAA,IAAxB;IAAEC,MAAM;IAAEC;EAAQ,CAAC,GAAAF,IAAA;EAC1D,IAAI,CAACC,MAAM,EAAE;IACX,OAAO,IAAI;EACb;EAEA,oBACEH,OAAA,CAACF,MAAM;IAACO,IAAI,EAAEF,MAAO;IAACC,OAAO,EAAEA,OAAQ;IAAAE,QAAA,eACrCN,OAAA,CAACF,MAAM,CAACS,KAAK;MAAAD,QAAA,eACXN,OAAA;QAAKQ,SAAS,EAAC,eAAe;QAAAF,QAAA,gBAC5BN,OAAA;UAAAM,QAAA,EAAI;QAAa;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtBZ,OAAA;UAAAM,QAAA,EAAG;QAAiC;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACxCZ,OAAA;UAAQa,OAAO,EAAET,OAAQ;UAAAE,QAAA,EAAC;QAAK;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEb,CAAC;AAACE,EAAA,GAhBIb,SAA+B;AAiBrC,eAAeA,SAAS;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}